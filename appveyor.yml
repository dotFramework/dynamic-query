image: Visual Studio 2017
configuration: Release
platform: Any CPU
skip_branch_with_pr: true
skip_tags: true

install:
    - ps: $env:version_file_path = ".\version.props"
    - ps: gitversion /output buildserver
    - ps: $env:major_version = (Select-Xml -Path $env:version_file_path -XPath "/Project/PropertyGroup/MajorVersion" | Select-Object -ExpandProperty Node).InnerText
    - ps: $env:minor_version = (Select-Xml -Path $env:version_file_path -XPath "/Project/PropertyGroup/MinorVersion" | Select-Object -ExpandProperty Node).InnerText
    - ps: $env:release_version = (Select-Xml -Path $env:version_file_path -XPath "/Project/PropertyGroup/ReleaseVersion" | Select-Object -ExpandProperty Node).InnerText
    - ps: $env:revision = $env:GitVersion_CommitsSinceVersionSource
    - ps: $env:package_semantic_version_suffix = (Select-Xml -Path $env:version_file_path -XPath "/Project/PropertyGroup/PackageSemanticVersionSuffix" | Select-Object -ExpandProperty Node).InnerText
    - ps: Update-AppveyorBuild -Version "$env:major_version.$env:minor_version.$env:release_version.$env:revision-build.$env:APPVEYOR_BUILD_NUMBER"
    - ps: $xRevision = Select-Xml -Path $env:version_file_path -XPath "/Project/PropertyGroup/Revision"
    - ps: $xRevision.Node.InnerText = $env:revision
    - ps: $xRevision.Node.OwnerDocument.Save($xRevision.Path)
    - ps: $env:git_release_version = "$env:major_version.$env:minor_version.$env:release_version$env:package_semantic_version_suffix"
    - ps: $env:is_pre_release = If ($env:package_semantic_version_suffix -eq "") { "false" } Else { "true" }
    - ps: $env:release_desc = If ($env:package_semantic_version_suffix -like "*-rc*") { "Release Candidate Version $env:major_version.$env:minor_version.$env:release_version" } Else { "Release Version $env:major_version.$env:minor_version.$env:release_version" }

dotnet_csproj:
    patch: false

before_build:
    - cmd: dotnet restore "source\DynamicQuery.sln"

build:
    project: source\DynamicQuery.sln
    parallel: true
    verbosity: minimal

after_build:
    

after_test:
    

artifacts:
    - path: 'bin\Release\DotFramework.DynamicQuery.*.nupkg'
      name: 'Nuget Packages'

    - path: 'bin\Release\DotFramework.DynamicQuery.*.snupkg'
      name: 'Nuget Symbols'

deploy:
  release: V$(git_release_version)
  description: $(release_desc)
  provider: GitHub
  auth_token: $(github_access_token)
  artifact: /.*\.nupkg/, /.*\.snupkg/
  draft: false
  prerelease: $(is_pre_release)
  force_update: true
  on:
    branch: master

for:
-
    branches:
        only:
            - master

    on_success:
        - ps: # dotnet nuget push bin\Release\DotFramework.DynamicQuery.*.nupkg -k $env:nuget_api_key -s https://api.nuget.org/v3/index.json